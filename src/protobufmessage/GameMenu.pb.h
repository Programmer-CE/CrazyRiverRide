// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GameMenu.proto

#ifndef PROTOBUF_GameMenu_2eproto__INCLUDED
#define PROTOBUF_GameMenu_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_GameMenu_2eproto();
void protobuf_AssignDesc_GameMenu_2eproto();
void protobuf_ShutdownFile_GameMenu_2eproto();

class GameMenu;

// ===================================================================

class GameMenu : public ::google::protobuf::Message {
 public:
  GameMenu();
  virtual ~GameMenu();

  GameMenu(const GameMenu& from);

  inline GameMenu& operator=(const GameMenu& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameMenu& default_instance();

  void Swap(GameMenu* other);

  // implements Message ----------------------------------------------

  inline GameMenu* New() const { return New(NULL); }

  GameMenu* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameMenu& from);
  void MergeFrom(const GameMenu& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GameMenu* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ButtonX = 1;
  inline bool has_buttonx() const;
  inline void clear_buttonx();
  static const int kButtonXFieldNumber = 1;
  inline ::google::protobuf::int32 buttonx() const;
  inline void set_buttonx(::google::protobuf::int32 value);

  // required int32 ButtonY = 2;
  inline bool has_buttony() const;
  inline void clear_buttony();
  static const int kButtonYFieldNumber = 2;
  inline ::google::protobuf::int32 buttony() const;
  inline void set_buttony(::google::protobuf::int32 value);

  // required int32 ButtonWidth = 3;
  inline bool has_buttonwidth() const;
  inline void clear_buttonwidth();
  static const int kButtonWidthFieldNumber = 3;
  inline ::google::protobuf::int32 buttonwidth() const;
  inline void set_buttonwidth(::google::protobuf::int32 value);

  // required int32 ButtonHeight = 4;
  inline bool has_buttonheight() const;
  inline void clear_buttonheight();
  static const int kButtonHeightFieldNumber = 4;
  inline ::google::protobuf::int32 buttonheight() const;
  inline void set_buttonheight(::google::protobuf::int32 value);

  // required bool ButtonActive = 5;
  inline bool has_buttonactive() const;
  inline void clear_buttonactive();
  static const int kButtonActiveFieldNumber = 5;
  inline bool buttonactive() const;
  inline void set_buttonactive(bool value);

  // @@protoc_insertion_point(class_scope:GameMenu)
 private:
  inline void set_has_buttonx();
  inline void clear_has_buttonx();
  inline void set_has_buttony();
  inline void clear_has_buttony();
  inline void set_has_buttonwidth();
  inline void clear_has_buttonwidth();
  inline void set_has_buttonheight();
  inline void clear_has_buttonheight();
  inline void set_has_buttonactive();
  inline void clear_has_buttonactive();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 buttonx_;
  ::google::protobuf::int32 buttony_;
  ::google::protobuf::int32 buttonwidth_;
  ::google::protobuf::int32 buttonheight_;
  bool buttonactive_;
  friend void  protobuf_AddDesc_GameMenu_2eproto();
  friend void protobuf_AssignDesc_GameMenu_2eproto();
  friend void protobuf_ShutdownFile_GameMenu_2eproto();

  void InitAsDefaultInstance();
  static GameMenu* default_instance_;
};
// ===================================================================


// ===================================================================

// GameMenu

// required int32 ButtonX = 1;
inline bool GameMenu::has_buttonx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameMenu::set_has_buttonx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameMenu::clear_has_buttonx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameMenu::clear_buttonx() {
  buttonx_ = 0;
  clear_has_buttonx();
}
inline ::google::protobuf::int32 GameMenu::buttonx() const {
  // @@protoc_insertion_point(field_get:GameMenu.ButtonX)
  return buttonx_;
}
inline void GameMenu::set_buttonx(::google::protobuf::int32 value) {
  set_has_buttonx();
  buttonx_ = value;
  // @@protoc_insertion_point(field_set:GameMenu.ButtonX)
}

// required int32 ButtonY = 2;
inline bool GameMenu::has_buttony() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameMenu::set_has_buttony() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GameMenu::clear_has_buttony() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GameMenu::clear_buttony() {
  buttony_ = 0;
  clear_has_buttony();
}
inline ::google::protobuf::int32 GameMenu::buttony() const {
  // @@protoc_insertion_point(field_get:GameMenu.ButtonY)
  return buttony_;
}
inline void GameMenu::set_buttony(::google::protobuf::int32 value) {
  set_has_buttony();
  buttony_ = value;
  // @@protoc_insertion_point(field_set:GameMenu.ButtonY)
}

// required int32 ButtonWidth = 3;
inline bool GameMenu::has_buttonwidth() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GameMenu::set_has_buttonwidth() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GameMenu::clear_has_buttonwidth() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GameMenu::clear_buttonwidth() {
  buttonwidth_ = 0;
  clear_has_buttonwidth();
}
inline ::google::protobuf::int32 GameMenu::buttonwidth() const {
  // @@protoc_insertion_point(field_get:GameMenu.ButtonWidth)
  return buttonwidth_;
}
inline void GameMenu::set_buttonwidth(::google::protobuf::int32 value) {
  set_has_buttonwidth();
  buttonwidth_ = value;
  // @@protoc_insertion_point(field_set:GameMenu.ButtonWidth)
}

// required int32 ButtonHeight = 4;
inline bool GameMenu::has_buttonheight() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GameMenu::set_has_buttonheight() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GameMenu::clear_has_buttonheight() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GameMenu::clear_buttonheight() {
  buttonheight_ = 0;
  clear_has_buttonheight();
}
inline ::google::protobuf::int32 GameMenu::buttonheight() const {
  // @@protoc_insertion_point(field_get:GameMenu.ButtonHeight)
  return buttonheight_;
}
inline void GameMenu::set_buttonheight(::google::protobuf::int32 value) {
  set_has_buttonheight();
  buttonheight_ = value;
  // @@protoc_insertion_point(field_set:GameMenu.ButtonHeight)
}

// required bool ButtonActive = 5;
inline bool GameMenu::has_buttonactive() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GameMenu::set_has_buttonactive() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GameMenu::clear_has_buttonactive() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GameMenu::clear_buttonactive() {
  buttonactive_ = false;
  clear_has_buttonactive();
}
inline bool GameMenu::buttonactive() const {
  // @@protoc_insertion_point(field_get:GameMenu.ButtonActive)
  return buttonactive_;
}
inline void GameMenu::set_buttonactive(bool value) {
  set_has_buttonactive();
  buttonactive_ = value;
  // @@protoc_insertion_point(field_set:GameMenu.ButtonActive)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GameMenu_2eproto__INCLUDED
